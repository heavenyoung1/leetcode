def binary_search(list, item):
  low = 0
  high = len(list)-1

  while low <= high:
    mid = (low + high)
    guess = list[mid]
    if guess == item:
      return mid
    elif guess > item:
      high = mid - 1
    else:
      low = mid + 1
  return None

my_list = [1, 3, 5, 7, 9]

print(binary_search(my_list, 9))





#РЕКУРСИЯ (БЕСКОНЕЧНАЯ)

def countdown(i):
  print(i)
  countdown(i-1)

countdown(100)
    
#РЕКУРСИЯ нормальная

def countdown(i):
  print(i)
  if i <= 0:
    return
  else: 
    countdown(i-1)

countdown(100)


#СТЕК ВЫЗОВ (ТОЛЬКО ПОЧЕМУ ОН НЕ РАБОТАЕТ?)
def greet(name):
#   print(f'hello {name}!')
#   greet2(name)
#   print('getting reary to say bye')
#   bye()

# вызов с рекурсией, почему не работает?
def factorial(x):
  if x == 1:
    return 1
  else:
    return x * factorial(x-1)


factorial(1)

# greet('Maggy')



#БЫСТРАЯ СОРТИРОВКА (СЛЕДУЕТ ИЗУЧИТЬ КОД И КАК ОН РАБОТАЕТ)

def quicksort(array):
  if len(array) < 2:
    return array #базовый случай, когла массивы с 0 и 1 элементами уже "отсортированы"
  else:
    pivot = array[0] #Рекурсивный случай
    less = [i for i in array[1:] if i <= pivot] #Подмассив всех элементов меньше опорного
    greater = [i for i in array[1:] if i > pivot] #Подмассив всех элементов больше опорного
    return quicksort(less) + [pivot] + quicksort(greater)

print(quicksort([10, 5, 2, 3]))

